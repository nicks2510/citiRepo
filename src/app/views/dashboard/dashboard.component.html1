<style>
  label {
    position: relative;
    cursor: pointer;
    font-size: 11px;
    margin-bottom: 0rem;
  }

  input[type="checkbox"] {
    position: absolute;
    right: 9000px;
  }

  /*Check box*/

  input[type="checkbox"]+.label-text:before {
    content: "\f096";
    font-family: "FontAwesome";
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    width: 1em;
    display: inline-block;
    margin-right: 5px;
  }



  input[type="checkbox"]:checked+.label-text:before {
    /* content: "\f14a"; */
    content: "\f046";
    /* content: "\f0c8"; */
    animation: effect 250ms ease-in;
  }

  input[type="checkbox"]:disabled+.label-text:before {
    content: "\f0c8";
    color: #ccc;
  }

  input:read-only {
    background-color: #F1F1F1;
  }

  .stClearStream::before {
    color: #55a975 !important;
  }

  .stDTC::before {
    color: #3350aa !important;
  }

  .stFED::before {
    color: #d5b168 !important;
  }

  .stGLOBAL::before {
    color: #3c8dbc !important;
  }

  .stMFOFF::before {
    color: #bb3ca0 !important;
  }

  .stMFDOM::before {
    color: #adbb3c !important;
  }

  .statusFail::before {
    color: #e60e0e !important;
  }

  .statusPending::before {
    color: #ffc200 !important;
  }

  .stIncomplete::before {
    color: #FFFF00 !important;
  }

  .totSell::before {
    color: #c012de !important;
  }

  .totbuy::before {
    color: #20c4c5 !important;
  }

  .totReceiveFree::before {
    color: #4484f1 !important;
  }

  .totDeliveredFree::before {
    color: #85f144 !important;
  }

  .riskNo::before {
    color: green !important;
  }

  .riskLow::before {
    color: lightgreen !important;
  }

  .riskMed::before {
    color: yellow !important;
  }

  .riskHi::before {
    color: #FFBF00 !important;
  }

  .riskVhi::before {
    color: red !important;
  }

  /* #dashboardTbl {
      max-height: 300px;
    } */

  @media (min-width: 576px) {
    #dashboardTbl {
      max-height: 10em;
    }
  }

  @media (min-width: 768px) {
    #dashboardTbl {
      max-height: 10.5em;
    }
  }

  @media (min-width: 992px) {
    #dashboardTbl {
      max-height: 15.5em;
    }
  }

  @media (min-width: 1200px) {
    #dashboardTbl {
      max-height: 22.5em;
    }
  }

  @media (min-width: 1400px) {
    #dashboardTbl {
      min-height: 24.5em;
    }
  }

  @media (min-width: 1600px) {
    #dashboardTbl {
      max-height: 27em;
    }
  }

  @media (min-width: 1800px) {
    #dashboardTbl {
      max-height: 31em;
    }
  }

  .table-responsive::-webkit-scrollbar {
    width: 10px;
    margin-left: -10px;
    -webkit-appearance: none;
  }

  .table-responsive::-webkit-scrollbar-track {
    background-color: white;
    border-right: 1px solid #f2f2f2;
    border-left: 1px solid #f2f2f2;
  }

  .table-responsive::-webkit-scrollbar-thumb {
    height: 50px;
    background-color: #e6e6e6;
    background-clip: content-box;
    border-color: transparent;
    border-style: solid;
    border-width: 1px 2px;
  }

  .card {
    margin-bottom: 5px;
  }

  .card-body-filter {
    background-color: #ecf0f5;
  }

  .card-header {
    text-align: center;
    padding-top: .5em !important;
    padding-bottom: .5em !important;
  }

  .card-headerfilter {
    text-align: center;
    padding-top: 0.2em !important;
    padding-bottom: 0.2em !important;
    font-size: 12px;
    font-weight: bold;
    /*background-color: white;*/
    /* border: none; */
  }

  .modal-lg {
    max-width: 91% !important;
  }



  .red {
    font-weight: bold;
    background-color: red !important;
  }

  /*5*/

  .lightgreen {
    font-weight: bold;
    background-color: rgb(109, 236, 109) !important;
  }

  /*1*/

  .yellow {
    font-weight: bold;
    background-color: yellow !important;
  }

  /*3*/

  .amber {
    font-weight: bold;
    background-color: #FFC200 !important;
  }

  /*4*/

  .green {
    font-weight: bold;
    background-color: green !important;
  }

  /*2*/

  .normal {
    color: 0;
    background-color: greenyellow !important;
  }

  .modal-td {
    max-width: 70% !important;
    font-size: 11px !important;
  }

  .modal-at {
    max-width: 72% !important;
  }

  .form-control {
    font-size: 11px !important;
  }

  .table tr:hover td {
    background-color: lightgray;
  }

  .active {
    /*background: lightgray;*/
    background: #3090C7;
    color: #fff;
  }

  .active a {
    color: cyan;
  }

  .active:hover td:not(:first-child) {
    background-color: transparent !important;

  }

  .dropdown-item {
    padding: 5px;
    font-size: 11px;
    /* font-weight:600; */
  }

  .btn {
    font-size: 11px;
  }

  .dropdown-menu {
    padding: 4px 4px;
    min-width: 6rem;
  }


  .switch {
    position: relative;
    display: inline-block;
    width: 35px;
    height: 20px;
  }

  .switch input {
    display: none;
  }

  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    -webkit-transition: .4s;
    transition: .4s;
  }

  .slider:before {
    position: absolute;
    content: "";
    height: 16px;
    width: 16px;
    left: 2px;
    bottom: 2px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
  }

  input:checked+.slider {
    background-color: #2196F3;
  }

  input:focus+.slider {
    box-shadow: 0 0 1px #2196F3;
  }

  input:checked+.slider:before {
    -webkit-transform: translateX(16px);
    -ms-transform: translateX(16px);
    transform: translateX(16px);
  }

  /* Rounded sliders */

  .slider.round {
    border-radius: 34px;
  }

  .slider.round:before {
    border-radius: 50%;
  }

  .select-custom {
    border: 1px solid rgb(191, 191, 194);


  }

  .circle-text {
    display: table-cell;
    height: 10px;
    /*change this and the width
for the size of your initial circle*/
    width: 10px;

    vertical-align: middle;
    border-radius: 50%;
    /*make it pretty*/
  }

  table.acc {
    border-collapse: collapse;
  }

  table.acc td {
    border: 1px dashed grey;
  }

  table.acc tr:first-child td {
    border-top: 0;
  }

  table.acc tr td:first-child {
    border-left: 0;
  }

  table.acc tr:last-child td {
    border-bottom: 0;
  }

  table.acc tr td:last-child {
    border-right: 0;
  }

  .btn-maximize {
    cursor: pointer;
    background-color: grey;
    height: 13px;
    width: 15px;
    border-radius: 3px;
    content: ' ';
    position: absolute;
    right: 0;
    top: 6px;
    margin-right: 3px;
    padding: 3px 4px;
    -webkit-box-shadow: inset 0px 2px 4px 0px #fff !important;
    -moz-box-shadow: inset 0px 2px 4px 0px #fff !important;
    box-shadow: inset 0px 2px 4px 0px #fff !important;
  }

  .btn-maximize-child {
    height: 7px;
    width: 7px;
    border: 1px solid #fff;
    border-top: 2px solid #fff;
  }

  .btn-maximize:hover {
    background-color: #0066b3 !important;
  }

  .col-lg-12 {
    -ms-flex: 0 0 100% !important;
    -webkit-box-flex: 0 !important;
    flex: 0 0 100% !important;
    max-width: 100% !important;
    transition: all 0.8s ease-out;
    padding-left: 15px !important;
    padding-right: 15px !important;
  }

  .col-md-12 {
    -ms-flex: 0 0 100% !important;
    -webkit-box-flex: 0 !important;
    flex: 0 0 100% !important;
    max-width: 100% !important;
    transition: all 0.0s ease-out;
    padding-left: 15px !important;
    padding-right: 15px !important;
  }

  .hide {
    transition: all 1.8s ease-in;
    display: none;
  }

  /* Sameer Code starts for Date Cal design */

  .date {
    display: block;
    width: 20%;
    height: 10%;
    /* margin: 30px auto; */
    margin: 5px;
    right: 10px;
    background: #fff;
    text-align: center;
    font-family: 'Helvetica', sans-serif;
    position: absolute;
  }

  .date .binds {
    position: absolute;
    height: 15px;
    width: 55px;
    background: transparent;
    border: 2px solid #999;
    border-width: 0 5px;
    top: -6px;
    left: 0;
    right: 0;
    margin: auto;
  }

  .date .month {
    background: #555;
    display: block;
    padding: 5px 0;
    color: #fff;
    font-size: 10px;
    font-weight: bold;
    border-bottom: 0px solid #333;
    box-shadow: inset 0 -1px 0 0 #666;
  }

  .date .day {
    display: block;
    margin: 0;
    padding: 5px 0;
    font-size: 27px;
    box-shadow: 0 0 3px #ccc;
    position: relative;
  }

  .date .day::after {
    content: '';
    display: block;
    height: 100%;
    width: 96%;
    position: absolute;
    top: 3px;
    left: 2%;
    z-index: -1;
    box-shadow: 0 0 3px #ccc;
  }

  .date .day::before {
    content: '';
    display: block;
    height: 100%;
    width: 90%;
    position: absolute;
    top: 6px;
    left: 5%;
    z-index: -1;
    box-shadow: 0 0 3px #ccc;
  }

hr {
  margin-top:0em;
  margin-bottom:0.5em;
}

.circle-label {
  display: inline-block;
    width: 12px;
    height: 12px;
    padding: 0;
    border: solid 0.5px;
}
</style>
<div class="animated fadeIn">

  <!-- Upper filter div Start  by Raj on 22/02/2018-->
  <div class="card" style="background-color:#87cefa;">
    <div class="card-body" style="padding: 5px 5px 0px 5px;">
      <div class="row">
        <div class="col-md-2" style="padding-right: 5px;">
          <div class="card">
            <div class="card-header card-headerfilter">
              Region
            </div>
            <div class="card-body" style="padding: 5px;">
              <table border="0" width="100%">
                <tbody>
                  <tr>
                    <td style="padding:10px" *ngFor="let region of filterAndSideLinkData.REGION | slice:0:2 let i = index">
                      <label>
                        <input class="minimal" [value]="region.NAME" (ngModelChange)="onSelectFilter()" [(ngModel)]="defaultSelection.REGION" type="radio"
                          name="region">
                        <span class="label-text">{{region.NAME}}</span>
                      </label>

                    </td>
                  </tr>

                </tbody>
              </table>
            </div>
          </div>
        </div>
        <div class="col-md-3" style="padding-left: 0px;padding-right: 5px;">
          <div class="card">
            <div class="card-header card-headerfilter">
              Frequency
            </div>
            <div class="card-body" style="padding: 5px;">
              <table border="0" width="100%">
                <tbody>
                  <tr>
                    <td style="padding:10px" *ngFor="let FREQUENCY of filterAndSideLinkData.FREQUENCY">

                      <label>
                        <input class="minimal" [value]="FREQUENCY.NAME" (ngModelChange)="onSelectFilter()" [(ngModel)]="defaultSelection.FREQUENCY"
                          type="radio" name="FREQUENCY">
                        <span class="label-text">{{FREQUENCY.NAME}}</span>
                      </label>

                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
        <div class="col-md-3" style="padding-left: 0px; padding-right: 5px;">
          <div class="card">
            <div class="card-header card-headerfilter">
              Products
            </div>
            <div class="card-body" style="padding: 5px;">
              <table border="0" width="100%">
                <tbody>
                  <tr>
                    <td style="padding: 3px;">
                      <select style="width: 100%;" class="btn btn-default select-custom">
                        <option *ngFor="let prod of filterAndSideLinkData.PRODUCTS" [value]="prod.VALUE">{{prod.NAME}}</option>
                      </select>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <div class="col-md-3" style="padding-left: 0px;">
          <div class="card">
            <div class="card-header card-headerfilter">
              Account Type
            </div>
            <div class="card-body" style="padding: 5px;">
              <table border="0" width="100%">
                <tbody>
                  <tr>
                    <td style="padding:10px" *ngFor="let ACCOUNT_TYPE of filterAndSideLinkData.ACCOUNT_TYPE | slice:0:2 let i = index">
                      <label>
                        <input class="minimal" (ngModelChange)="onSelectFilter()" [value]="ACCOUNT_TYPE.NAME" [(ngModel)]="defaultSelection.ACCOUNT_TYPE"
                          type="radio" name="ACCOUNT_TYPE">
                        <span class="label-text">{{ACCOUNT_TYPE.NAME}}</span>
                      </label>

                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <div class="col-md-1" style="padding-left: 0px; ">
          <div class="card" style="border:0; background-color:#87cefa;">
            <div class="card-body" style="padding:0px; padding-top:0%">
              <input type="Button" class="btn-primary" (click)="ClickbtnReload()" style="margin-top:2px; width:100px;height: 30px;font-size:11px"
                aria-expanded="true" value="Refresh Data" size="12" id="btnRefreshAll">
              <input type="Button" class="btn-primary" (click)="ClickbtnReset()" style="margin-top:5px; width:100px;height: 30px;font-size:11px"
                aria-expanded="true" value="Reset" size="12" id="btnClearAll">
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- Upper filter div end -->

  <!-- Detail Div Start -->
  <div class="card">
    <div class="card-body" style="padding:5px;">
      <div class="row">

        <!-- First Widget for Account opening Start-->
        <div id="acOpening" class="col-md-3" [ngClass]="{'col-md-12': selectedBox === 'acOpening', 'hide' : acOpeningFlag }" style="padding-right: 5px;">
          <div class="card">
            <div class="card-header card-headerfilter">
              ACCOUNT OPENING
              <div (click)="toggleSelectedBox('acOpening')" class="btn-maximize">
                <div class="btn-maximize-child"></div>
              </div>
            </div>
            <div class="card-body" style="padding: 5px; min-height:200px;">
              <div class="row">
                <div [ngClass]="(selectedBox === 'acOpening' ) ? 'col-lg-4': 'col-md-12'"></div>
                <div [ngClass]="(selectedBox === 'acOpening' ) ? 'col-lg-4': 'col-md-12'" style=" padding:5px;">
                  <label class="col-md-4" *ngFor="let rec of acCycleData">
                    <input class="minimal" [value]="rec.type" [(ngModel)]="defaultSelection.selectedUsers" (change)="seletedType(rec.type)" type="radio"
                      name="usertype">
                    <span class="label-text">{{rec.type}}</span>
                  </label>
                </div>
                <div [ngClass]="(selectedBox === 'acOpening' ) ? 'col-lg-4': 'col-md-12'"></div>
              </div>
              <hr />
              <!-- Sameer Code Goes Here -->
              <div class="row">
                <!-- First Child Widget for Account opening Start-->
                <div [ngClass]="(selectedBox === 'acOpening' ) ? 'col-lg-4': 'col-md-12'">
                    <div class="card-headerfilter" style="text-align: left;">CYCLE TIME</div>
                    <hr />
                    <!-- Calender Widget Code Starts -->
                    <div class="date">
                      <span class="binds"></span>
                      <span class="month">YTD AVG</span>
                      <h1 [ngClass]="filteredACCycleData[0].RQ == 5 ? 'dayRed': 'day'">24</h1>
                    </div>
                    <!-- Calender Widget Code Ends -->
                  
                  
                  <table style="width:60%">
                    <thead style="font-weight:bold" style="font-size:12px">
                      <tr>
                        <td>LM</td>
                        <td>CM</td>
                        <td>MOM</td>
                        <td>RQ</td>
                      </tr>
                    </thead>
                    <tbody>
                      <tr style="height:40px;">
                        <td>16</td>
                        <td>14</td>
                        <td>
                          <i class="fa fa-arrow-up" style="font-weight:bold"></i>
                        </td>
                        <td>
                          <svg height="20" width="20">
                            <circle *ngIf="filteredACCycleData[0].RQ == 0 ||filteredACCycleData[0].RQ == 1 || filteredACCycleData[0].RQ == 2" cx="12"
                              cy="12" r="6" stroke="black" stroke-width="1" fill="green" />
                            <circle *ngIf="filteredACCycleData[0].RQ == 3 || filteredACCycleData[0].RQ == 4" cx="12" cy="12" r="6" stroke="black" stroke-width="1"
                              fill="#FFCC00" />
                            <circle *ngIf="filteredACCycleData[0].RQ == 5" cx="12" cy="12" r="6" stroke="black" stroke-width="1" fill="red" />
                          </svg>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                  <!-- Code for LineChart Goes Here -->
                  <lineChart (chartClickEvent)="chartClicked($event)" (chartHoverEvent)="chartHover($event)" [id]="line" [data]="[]" id="LineChart1"></lineChart>
                <br>
                </div>
                <!-- First Child Widget for Account opening Ends-->
                
                <!-- Second Child Widget for Account opening Start-->
                <div [ngClass]="(selectedBox === 'acOpening' ) ? 'col-lg-4': 'col-md-12'">
                    <!-- <div class="col-sm-12 col-lg-4">
                        
                        
                        
                        <span class=" badge-pill badge-info circle-label"></span>
                        
                        </div> -->
                    <div class="card-headerfilter" style="text-align: left;">A/C OPENING VOLUME</div>
                    <hr />
                  <!-- Calender Widget Code Starts -->
                  <div class="date">
                    <span class="binds"></span>
                    <span class="month">YTD VOL</span>
                    <h1 [ngClass]="filteredACCycleData[0].RQ == 5 ? 'dayRed': 'day'">12</h1>
                  </div>
                  <!-- Calender Widget Code Ends -->
                  
                  <table style="width:60%">
                    <thead>
                      <tr style="height:40px;">
                        <td style="width:25%;">LM</td>
                        <td style="width:25%;">CM</td>
                        <td style="width:25%;">MOM</td>
                        <td style="width:20%;">RQ</td>
                      </tr>
                    </thead>
                    <tbody>
                      <tr *ngFor="let rec of filteredACCycleData">
                        <td>{{rec.LM}}</td>
                        <td>{{rec.CM}}</td>
                        <td></td>
                        <td>
                          <!-- <svg height="20" width="20">
                            <circle *ngIf="rec.RQ == 0 ||rec.RQ == 1 || rec.RQ == 2" cx="12" cy="12" r="6" stroke="black" stroke-width="1" fill="green" />
                            <circle *ngIf="rec.RQ == 3 || rec.RQ == 4" cx="12" cy="12" r="6" stroke="black" stroke-width="1" fill="#FFCC00" />
                            <circle *ngIf="rec.RQ == 5" cx="12" cy="12" r="6" stroke="black" stroke-width="1" fill="red" />
                          </svg> -->
                          
                        </td>
                      </tr>
                    </tbody>
                  </table>
                  <!-- Code for BarChart will go here -->
                  <BarChart [data]="[]"></BarChart>
                </div>
                <!-- Second Child Widget for Account opening End-->
                <!-- Third Child Widget for Account opening Start-->
                <div [ngClass]="(selectedBox === 'acOpening' ) ? 'col-lg-4': 'col-md-12'">
                  <div class="card-headerfilter" style="text-align: left;"> VOLUME BY PRODUCT</div>
                  <hr />
                </div>
                <!-- Third Child Widget for Account opening End-->
              </div>
              <!-- Sameer Code Ends Here -->
            </div>
          </div>
        </div>
        <!-- First Widget for Account opening End-->

        <!-- Second Widget for KYC START-->
        <div id="KYC" class="col-md-3" [ngClass]="{'col-md-12': selectedBox === 'KYC', 'hide' : kycFlag }" style="padding-left: 0px; padding-right: 5px;">
          <div class="card">
            <div class="card-header card-headerfilter">
              KYC
              <div (click)="toggleSelectedBox('KYC')" class="btn-maximize">
                <div class="btn-maximize-child"></div>
              </div>
            </div>
            <div class="card-body" style="padding: 5px; min-height:200px;">

            </div>
          </div>
        </div>
        <!-- Second Widget for KYC End-->

        <!-- Third Widget for Account Maintenance  Start-->
        <div id="acMain" class="col-md-3" [ngClass]="{'col-md-12': selectedBox === 'acMain', 'hide' : acMaintFlag }" style="padding-left: 0px; padding-right: 5px;">
          <div class="card">
            <div class="card-header card-headerfilter">
              ACCOUNT MAINTENANCE
              
              <label class="switch switch-text switch-pill switch-primary-outline-alt">
                  <input type="checkbox" class="switch-input" checked="">
                  <span class="switch-label" data-on="AC" data-off="EG"></span>
                  <span class="switch-handle"></span>
                  </label>
              <div (click)="toggleSelectedBox('acMain')" class="btn-maximize">
                <div class="btn-maximize-child"></div>
              </div>

            </div>
            <div class="card-body" style="padding: 5px; min-height:200px;">

            </div>
          </div>
        </div>
        <!-- Third Widget for Account Maintenance  Start-->

        <!-- Fourth Widget for Account Maintenance  Start-->
        <div id="webEnrollments" class="col-md-3" [ngClass]="{'col-md-12': selectedBox === 'acMain', 'hide' : acMaintFlag }" style="padding-left: 0px; padding-right: 15px;">
            <div class="card">
              <div class="card-header card-headerfilter">
                WEB ENROLLMENTS
                <div (click)="toggleSelectedBox('webEnrollments')" class="btn-maximize">
                  <div class="btn-maximize-child"></div>
                </div>
  
              </div>
              <div class="card-body" style="padding: 5px; min-height:200px;">
  
              </div>
            </div>
          </div>

      </div>

    </div>
  </div>
</div>



<!-- <div class="my-container">
      <ngx-loading [show]="isLoader"></ngx-loading>

  </div> -->